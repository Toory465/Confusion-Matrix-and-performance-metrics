{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fnil\fcharset0 Menlo-Italic;}
{\colortbl;\red255\green255\blue255;\red109\green109\blue109;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\i\fs24 \cf2 # def maximum_false_positive_rate(cm):\
#\
#     fn = calculate_FN()\
#     list_ = []\
#     for index, item in enumarate(fn, 0):\
#         if item > 0.0015:\
#             list.append(index)\
#\
# def softmax_(list, train_set, tn):\
#     total = 0\
#     correct = 0\
#     start_time = time.time()\
#     time.time()\
#     # initialize confiution matrix\
#     cm = np.zeros((10, 10))\
#     fp_arr = [[]] * 10\
#     for images, labels in enumerate(train_set):\
#         outputs = torch.nn.functional.softmax(images)\
#         _, predicted = torch.max(outputs.data, 1)\
#         for i in range(predicted.size(0)):\
#             if predicted[i] != labels[i]:\
#                 fp_arr[predicted[i]].append(outputs[predicted[i]])\
\
\
}